{"version":3,"file":"crwl.cjs.development.js","sources":["../src/lib/page.ts"],"sourcesContent":["import {\n  Browser,\n  HTTPResponse,\n  Page as PuppeteerPage,\n  WaitForOptions,\n} from \"puppeteer\";\nimport { EventEmitter } from \"events\";\nimport { access, writeFile } from \"fs/promises\";\nimport { join } from \"path\";\nimport { AnyNode, Cheerio, load as cheerioLoad } from \"cheerio\";\nimport { URL } from \"url\";\nimport mkdirp from \"mkdirp\";\nimport { nanoid } from \"nanoid\";\n\n/**\n * Adding an exlucde array when there is an include array, does not do anything.\n */\nexport interface Schema {\n  rootElement?: string;\n  include?: string[];\n  exclude?: string[];\n}\n\nexport interface PageOptions {\n  baseUrl: string;\n  name?: string;\n  schema?: Schema;\n}\n\nexport interface PuppeteerBrowser extends Browser {}\n\nexport class Page extends EventEmitter {\n  protected _browser: PuppeteerBrowser;\n  protected _page: PuppeteerPage | null;\n  protected _options: PageOptions;\n  protected _root: Cheerio<AnyNode> | null;\n  protected _name: string;\n\n  constructor(browser: Browser, options: PageOptions) {\n    super();\n\n    this._browser = browser;\n    this._page = null;\n    this._options = options;\n    this._root = null;\n\n    this._name = options.name ?? \"Page-\" + nanoid(6);\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get root() {\n    return this._root;\n  }\n\n  get html() {\n    if (!this._root) return null;\n\n    return this._root.html();\n  }\n\n  public async open(\n    path: string,\n    options?: WaitForOptions\n  ): Promise<HTTPResponse | null> {\n    if (!this._page) {\n      this._page = await this._browser.newPage();\n    }\n\n    const url = new URL(path, this._options.baseUrl);\n\n    const res = await this._page.goto(url.href, options);\n\n    return res;\n  }\n\n  public async trimPage(\n    schema: Schema = this._options.schema || {}\n  ): Promise<string | null> {\n    if (!this._page) throw new Error(\"No page to trim.\");\n\n    // follow schema to trim the page down to the desired elements only\n\n    const pageSource = await this._page.content();\n    const $ = cheerioLoad(pageSource);\n\n    // get the root element that we are going to include/exclude tags from\n    const root = $(schema.rootElement ?? \"html\");\n\n    if (root.length < 0) {\n      throw new Error(\n        \"Could not find root element as specified in schema in page: \" +\n          this._options.name\n      );\n    }\n\n    if (schema.exclude && schema.exclude.length > 0) {\n      for (let elSelector of schema.exclude) {\n        root.remove(elSelector);\n      }\n    }\n\n    this._root = root;\n\n    if (schema.include && schema.include.length > 0) {\n      // empty root to start including just the elements we want\n      const newRoot = root.clone().empty();\n\n      for (let elSelector of schema.include) {\n        const currentElement = root.find(elSelector);\n\n        newRoot.append(currentElement);\n      }\n\n      this._root = newRoot;\n    }\n\n    return this._root.html();\n  }\n\n  public async saveAs(filename: string, path: string = process.cwd()) {\n    if (!this._root) {\n      throw new Error(\n        \"No root element acquired yet. Trim page to get root element, then save page.\"\n      );\n    }\n    const html = this._root.html();\n    if (html === null) {\n      throw new Error(\"Could not get HTML string to save page.\");\n    }\n\n    try {\n      await access(path);\n    } catch (error) {\n      await mkdirp(path);\n    }\n\n    await writeFile(join(path, filename), html);\n  }\n}\n"],"names":["Page","browser","options","_browser","_page","_options","_root","_name","name","nanoid","open","path","newPage","url","URL","baseUrl","href","res","trimPage","schema","Error","content","pageSource","$","cheerioLoad","root","rootElement","length","exclude","elSelector","remove","include","newRoot","clone","empty","currentElement","find","append","html","saveAs","filename","process","cwd","access","mkdirp","writeFile","join","EventEmitter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+BaA,IAAb;EAAA;;EAOE,cAAYC,OAAZ,EAA8BC,OAA9B;;;;;IACE;IAEA,MAAKC,QAAL,GAAgBF,OAAhB;IACA,MAAKG,KAAL,GAAa,IAAb;IACA,MAAKC,QAAL,GAAgBH,OAAhB;IACA,MAAKI,KAAL,GAAa,IAAb;IAEA,MAAKC,KAAL,oBAAaL,OAAO,CAACM,IAArB,4BAA6B,UAAUC,aAAM,CAAC,CAAD,CAA7C;;;;EAfJ;;EAAA,OAgCeC,IAhCf;IAAA,oFAgCS,iBACLC,IADK,EAELT,OAFK;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,IAIA,KAAKE,KAJL;gBAAA;gBAAA;;;cAAA;cAAA,OAKgB,KAAKD,QAAL,CAAcS,OAAd,EALhB;;YAAA;cAKH,KAAKR,KALF;;YAAA;cAQCS,KARD,GAQO,IAAIC,OAAJ,CAAQH,IAAR,EAAc,KAAKN,QAAL,CAAcU,OAA5B,CARP;cAAA;cAAA,OAUa,KAAKX,KAAL,SAAgBS,KAAG,CAACG,IAApB,EAA0Bd,OAA1B,CAVb;;YAAA;cAUCe,GAVD;cAAA,iCAYEA,GAZF;;YAAA;YAAA;cAAA;;;;KAhCT;;IAAA;MAAA;;;IAAA;;;EAAA,OA+CeC,QA/Cf;IAAA,wFA+CS,kBACLC,MADK;MAAA;;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,IACLA,MADK;gBACLA,MADK,GACY,KAAKd,QAAL,CAAcc,MAAd,IAAwB,EADpC;;;cAAA,IAGA,KAAKf,KAHL;gBAAA;gBAAA;;;cAAA,MAGkB,IAAIgB,KAAJ,CAAU,kBAAV,CAHlB;;YAAA;cAAA;cAAA,OAOoB,KAAKhB,KAAL,CAAWiB,OAAX,EAPpB;;YAAA;cAOCC,UAPD;cAQCC,CARD,GAQKC,YAAW,CAACF,UAAD,CARhB;;cAWCG,IAXD,GAWQF,CAAC,wBAACJ,MAAM,CAACO,WAAR,kCAAuB,MAAvB,CAXT;;cAAA,MAaDD,IAAI,CAACE,MAAL,GAAc,CAbb;gBAAA;gBAAA;;;cAAA,MAcG,IAAIP,KAAJ,CACJ,iEACE,KAAKf,QAAL,CAAcG,IAFZ,CAdH;;YAAA;cAoBL,IAAIW,MAAM,CAACS,OAAP,IAAkBT,MAAM,CAACS,OAAP,CAAeD,MAAf,GAAwB,CAA9C,EAAiD;gBAC/C,iDAAuBR,MAAM,CAACS,OAA9B,iCAAuC;kBAA9BC,UAA8B;kBACrCJ,IAAI,CAACK,MAAL,CAAYD,UAAZ;;;;cAIJ,KAAKvB,KAAL,GAAamB,IAAb;;cAEA,IAAIN,MAAM,CAACY,OAAP,IAAkBZ,MAAM,CAACY,OAAP,CAAeJ,MAAf,GAAwB,CAA9C,EAAiD;;gBAEzCK,OAFyC,GAE/BP,IAAI,CAACQ,KAAL,GAAaC,KAAb,EAF+B;;gBAI/C,kDAAuBf,MAAM,CAACY,OAA9B,mCAAuC;kBAA9BF,WAA8B;kBAC/BM,cAD+B,GACdV,IAAI,CAACW,IAAL,CAAUP,WAAV,CADc;kBAGrCG,OAAO,CAACK,MAAR,CAAeF,cAAf;;;gBAGF,KAAK7B,KAAL,GAAa0B,OAAb;;;cAtCG,kCAyCE,KAAK1B,KAAL,CAAWgC,IAAX,EAzCF;;YAAA;YAAA;cAAA;;;;KA/CT;;IAAA;MAAA;;;IAAA;;;EAAA,OA2FeC,MA3Ff;IAAA,sFA2FS,kBAAaC,QAAb,EAA+B7B,MAA/B;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,IAA+BA,MAA/B;gBAA+BA,MAA/B,gBAA8C8B,OAAO,CAACC,GAAR,EAA9C;;;cAAA,IACA,KAAKpC,KADL;gBAAA;gBAAA;;;cAAA,MAEG,IAAIc,KAAJ,CACJ,8EADI,CAFH;;YAAA;cAMCkB,IAND,GAMQ,KAAKhC,KAAL,CAAWgC,IAAX,EANR;;cAAA,MAODA,IAAI,KAAK,IAPR;gBAAA;gBAAA;;;cAAA,MAQG,IAAIlB,KAAJ,CAAU,yCAAV,CARH;;YAAA;cAAA;cAAA;cAAA,OAYGuB,eAAM,CAAChC,MAAD,CAZT;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAAA;cAAA,OAcGiC,MAAM,CAACjC,MAAD,CAdT;;YAAA;cAAA;cAAA,OAiBCkC,kBAAS,CAACC,SAAI,CAACnC,MAAD,EAAO6B,QAAP,CAAL,EAAuBF,IAAvB,CAjBV;;YAAA;YAAA;cAAA;;;;KA3FT;;IAAA;MAAA;;;IAAA;;;EAAA;IAAA;IAAA,KAkBE;MACE,OAAO,KAAK/B,KAAZ;;;IAnBJ;IAAA,KAsBE;MACE,OAAO,KAAKD,KAAZ;;;IAvBJ;IAAA,KA0BE;MACE,IAAI,CAAC,KAAKA,KAAV,EAAiB,OAAO,IAAP;MAEjB,OAAO,KAAKA,KAAL,CAAWgC,IAAX,EAAP;;;;EA7BJ;AAAA,EAA0BS,mBAA1B;;;;"}